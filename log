# 2023-08-29
[resolved] [issue-11] scroll to tooltip on click regardless of what the parent is (only the closest parent, cannot scroll several levels of container)
[done] removed click on gray tooltips to open a new page as it appears to be quite confusing

# 2023-07-25
[resolved] [issue-4] fixed another deletion bug (related to alldone variable)
[issue-6] [partial] edge cases for positioning done for 5/6 tasks
[issue-11] scrollIntoView() works only for window scrolling, not when there is a different scroll parent. small edge case I don't intend to fix for now.
[done] sort the tooltips in topbar every time it's updated

# 2023-07-04
[issue-6] [partial] attempted dynamic positioning by adding the recalculation to setTooltipsVisibility (reLoc = true)
* queryStr is flawed. added "name" to one of the identifiers but will have to see if name/id will get us in trouble in other cases.
* still needs a lot more testing.

# 2023-06-29
[done] calculate original position based on scrollParent instead of window
[issue-6] [todo] the position of the right-oriented tooltips are still sometimes a bit off, covering the button directly. also, for some types of buttons, such as OK/cancel, it's safer to place tooltip below it.

[issue-10] when user clicks then type, it's more natural to have only 1 tooltip that says "click here then type" and 2 tooltips or just one that says "click here"

# 2023-06-28
[issue-6] [partial] added tooltips placed on the right as the default. 

# 2023-06-07
[issue-6] (related to tooltip placement) in general still needs to be improved. current plan of action:
* add an option for tooltips to be placed on the right of the object
* figure out a heuristic for deciding the orientation. most things tend to be stacked vertically, so it might make sense to make right tooltip the default.
* once we decide on the task, I can also just add exceptions to manually fix the terrible placements.

# 2023-06-06
[resolved] [issue-9] right click not recorded, but the option selected within the contextmenu can't be listened from within the page.

[done] text description shouldn't concat text from all children elements. we want the text only from the topmost level that has text, but if there are several children at the topmost level, assume there is no text (e.g., user clicked on a container div).

# 2023-06-02
[done] improved the queryStr accuracy and added textContent check

[todo] recalculate tooltip position based on the queryStr?

[done] currently I'm calling setTooltipsVisibility for every mutation. check IntersectionObserver to see if I can make the call only if there is visibility change on the target elements. might allow us to be more accurate in checking visibility than simply finding the element as well (e.g., the element may be hidden).
* too complex to write because after an elements gets removed from the dom structure, the observer won't recognize it even if the exact same code is re-injected.
* wrote a separate isVisible function to call in setTooltipsVisibility, and modified mutationObserver to call setTooltipsVisibility more often. probably the observer is producing a lot more mutations, it's a bit delayed but is obviously more accurate.

# 2023-06-01
[done] some element recognition issues with calendar, might've broke some other cases

[done] save changes while reading, edits should be saved the same way newly written guides are saved (overwrite the guide's object in local storage).

[todo] add confirmation button for tooltip & guide deletion

# 2023-04-08
[resolved] [issue-8] didn't test very thoroughly but looks like it works!!

# 2023-04-24
[issue-8] some pages reload without triggering page load, so the moved page gets shifted back up

## 2023-04-12
[resolved] order of topbar tooltips goes wonky when reload a new page in place. speculate to be because the function is called from two places so there is some overwriting going on for some tooltips.

[issue-7] no solution for overflowing when there are a lot of tooltips yet

## 2023-04-11
[done] add context menu for topbar tooltips

[done] add hyperlink for grayed topbar tooltips

## 2023-04-04
[resolved] completely modified the editing features to use context menu

[issue-6] (related to tooltip placement) since the text can now be edited, it's possible to take up too many lines and disappear in to the top or the bottom of the page.

## 2023-03-30
[resolved] [issue-4] tooltip numbers go wonky on vpl after deleting a step in front

## 2023-03-28
[done]
* save both types of edits to session storage as soon as they done
* if writing, edits should be saved to local storage automatically at the end

[issue-4] tooltip 0 appeared again today, but then I did the same sequence but couldn't recreate it...

[resolved] [issue-6] (related to tooltip placement) because the actual position of tooltip is -offsetLeft of closed tooltip, you can drag beside it as well, which sometimes covers the tooltip on its left.

[issue-5] youtube's video previews get messed up by topbar

## 2023-03-21
[todo] add mutationobserver back to ignore left-clicks that don't cause any mutation?

[resolved] [issue-3] [note] scroll parent code logic
1. scrollParent doesn't need to be saved. getScrollParent is (hopefully?) not too expensive and can be called on the target (based on queryStr) at the time of tooltip injection.
2. add eventListener to the scrollParent if scrollParent != html or body (anything that's already taken care of by fixed vs absolute positioning). this should be able to save some computation time, assuming most objects should scroll with the window.
[partial] implemented scroll listener. doesn't exactly work with all scrolls (some wheel actions don't trigger scroll event), but seems okay with most.


## 2023-03-20
implemented all of topbar's basic features
[issue-5] topbar also appears but the layout is off on MDN website
[issue-5] [partial] fixed google image problem by relaxing a condition in hasPositionedParent, needs to be further tested

implemented url match relaxation. as a result, now google search (image, all, news, etc.) are all considered the same page, but their DOM structures are very different so the tooltips don't cross-appear anyways.

[issue-6] [partial] modify calcTooltipLoc to account for the topbar and change its orientation if placed below the element. the placement still seems a little tight and clicking to open tooltips can get difficult.


## 2023-03-14
[issue-2] [partial] been attempting the unique identifier (queryStr) approach again over the past 2 weeks. finally got something to work! will need to be tested further to work out what attributes to save.
[todo] see if it'd be a good idea to recompute tooltip location every time it's displayed

[issue-4] haven't been able to replicate the issue after that day.

partially implemented topbar
[issue-5] topbar isn't appearing correctly on google image (other google pages work fine)

[todo] implement new edit mode design:
* hold ctrl+alt to bring up edit mode
* every option & action need to be visual
* deletion needs a confirmation box, since we're not allowing inserting tooltips in between (i.e., if they accidentally delete/miss a step, they have to start over)

[issue-6] tooltip location's compute function needs to be adjusted to make sure they are never covered by the topbar.

## 2023-02-22
[issue-4] 0 appears after deleting a tooltip!

## 2023-02-21

[resolved] [issue-3] tried to find and save scrollable parent, but ran into a couple of roadblocks
* attempt saved in script-scrollParent.jss
* position will have to be recalculated. not sure how yet.
* some elements have properties that prevent document.getDocumentById from finding it, so tooltips become non-interactive if placed in that kind of parent.
* not all scrollable parents are detected. somehow in youtube upload box no scrollable parent is found.

## 2023-02-16

[resolved] added "alldone" to prevent loading a new webpage before everything finishes getting written
* the solution is a bit of a hack - see beforeunload listener

[todo] if the cloned's text is empty ("this"), use its parent's

[issue-2] next step: try creating a 'unique identifier' from the entire parent hierarchy by nodeName and id/role if exists > probably would need to save the entire path (as queryStr) at cloning time (though cloning the entire body is probably way too expensive)


## 2023-02-14

[partial] [issue-2] restructured variable scheme for saving event data
* added a deep copy of the target element as soon as the event is triggered and keep a deep copy of the bounding rect while also keeping the element itself to trace the dom tree
* put all details of the event in one object and pass it as function parameters instead of as global variables

[partial] addressed the issue of overlapping tooltips by moving right, but probably could be a bit more strategic

[issue-1] tried to change the top div of tooltip to iframe but couldn't quite get the css to work yet
* attempt saved in script-iframe.js
* haven't figured out how to make the height adjust to divOpen's height. tried to get scrollHeight but it just returns 0.
* the width is also fixed, so the entire divOpen's area is covering the page below even if the tooltip is closed.

## 2023-02-13

[issue-2] failed to save the associated target element and use that to display tooltips
* tried both the element itself and its interactive parent -- the latter seems to work a little better
* tried to recalculate location based on the saved element, but it just appears to move to random places
* the biggest roadblock is that classList can change, even for the same element in the same state, for big, dynamic websites like google calendar
    * could try to use a combination of nodeName, id and/or childrenNodes next
    * could try to combine them with url, or part of it (exclude everything after ?, for instance)?
* why not use url?
    * interface can change signifcantly without changing the url (e.g., google calendar's new event modal, vpl's read more)
    * url can change even when the interface doesn't (e.g., gmail)
* the failed attempt is saved in script-queryStr.js
    * still only updates when url changes, no idea what trigger to use instead - mutationObserver?

[issue-1] modal disappears when click on the tooltip (see google calendar)
* tried preventDefault and stopPropagation if the clicked object is in tooltip, but doesn't help