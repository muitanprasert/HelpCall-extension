## 2023-02-22
[todo] 0 appears after deleting a tooltip!

## 2023-02-21

[unresolved-3] tried to find and save scrollable parent, but ran into a couple of roadblocks
* attempt saved in script-scrollParent.jss
* position will have to be recalculated. not sure how yet.
* some elements have properties that prevent document.getDocumentById from finding it, so tooltips become non-interactive if placed in that kind of parent.
* not all scrollable parents are detected. somehow in youtube upload box no scrollable parent is found.

## 2023-02-16

[resolved] added "alldone" to prevent loading a new webpage before everything finishes getting written
* the solution is a bit of a hack - see beforeunload listener

[todo] if the cloned's text is empty ("this"), use its parent's

[unresolved-2] [todo] try creating a 'unique identifier' from the entire parent hierarchy by nodeName and id/role if exists > probably would need to save the entire path (as queryStr) at cloning time (though cloning the entire body is probably way too expensive)


## 2023-02-14

[partial] restructured variable scheme for saving event data
* added a deep copy of the target element as soon as the event is triggered and keep a deep copy of the bounding rect while also keeping the element itself to trace the dom tree
* put all details of the event in one object and pass it as function parameters instead of as global variables

[partial] addressed the issue of overlapping tooltips by moving right, but probably could be a bit more strategic

[unresolved-1] tried to change the top div of tooltip to iframe but couldn't quite get the css to work yet
* attempt saved in script-iframe.js
* haven't figured out how to make the height adjust to divOpen's height. tried to get scrollHeight but it just returns 0.
* the width is also fixed, so the entire divOpen's area is covering the page below even if the tooltip is closed.

## 2023-02-13

[unresolved-2] failed to save the associated target element and use that to display tooltips
* tried both the element itself and its interactive parent -- the latter seems to work a little better
* tried to recalculate location based on the saved element, but it just appears to move to random places
* the biggest roadblock is that classList can change, even for the same element in the same state, for big, dynamic websites like google calendar
    * could try to use a combination of nodeName, id and/or childrenNodes next
    * could try to combine them with url, or part of it (exclude everything after ?, for instance)?
* why not use url?
    * interface can change signifcantly without changing the url (e.g., google calendar's new event modal, vpl's read more)
    * url can change even when the interface doesn't (e.g., gmail)
* the failed attempt is saved in script-queryStr.js
    * still only updates when url changes, no idea what trigger to use instead - mutationObserver?

[unresolved-1] modal disappears when click on the tooltip (see google calendar)
* tried preventDefault and stopPropagation if the clicked object is in tooltip, but doesn't help